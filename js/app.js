angular.module("app",["ui.router","buoys"]),angular.module("buoys",[]),angular.module("app").config(["$stateProvider","$urlRouterProvider",function(e,o){o.otherwise("/buoys"),e.state("buoys",{url:"/buoys",controller:"BuoyCtrl",templateUrl:"templates/buoys/buoys.html"})}]),angular.module("buoys").controller("BuoyCtrl",["$scope","$http","BuoyService",function(e,o,t){console.log("buoy contoller started");var r=[46012,46237,46026];e.buoys=[],_.each(r,function(o){var r=t.getLatestReading(o);r.then(function(o){console.log(o),e.buoys.push(o)},function(e){console.log(e)})})}]),angular.module("buoys").factory("BuoyService",["$http","$log","$q",function(e,o,t){return{getLatestReading:function(o){console.log("fetching buoy",o);var r=t.defer();return e.get("http://cryptic-peak-9100.herokuapp.com/api/buoys/"+o).success(function(e){var t=e[0];r.resolve({id:o,timestamp:t.timestamp,relativeTimestamp:moment(t.timestamp).zone("-0800").fromNow(),swellHeight:t.swellHeight,swellPeriod:t.swellPeriod,swellDegrees:t.swellDegrees,swellDirection:t.swellDirection,windSpeed:t.windSpeed,windDegrees:t.windDegrees,windDirection:t.windDirection,waterTemp:t.waterTemp,airTemp:t.airTemp})}).error(function(e){r.reject(e)}),r.promise}}}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpzL21vZHVsZS5qcyIsImpzL2J1b3lzL21vZHVsZS5qcyIsImpzL3JvdXRlcy5qcyIsImpzL2J1b3lzL2J1b3lDb250cm9sbGVyLmpzIiwianMvYnVveXMvYnVveVNlcnZpY2UuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsUUFBQSxPQUFBLE9BQ0EsWUFDQSxVQ0ZBLFFBQUEsT0FBQSxZQ0FBLFFBQUEsT0FBQSxPQUNBLFFBQUEsaUJBQUEscUJBQUEsU0FBQSxFQUFBLEdBQ0EsRUFBQSxVQUFBLFVBQ0EsRUFDQSxNQUFBLFNBQ0EsSUFBQSxTQUNBLFdBQUEsV0FDQSxZQUFBLGtDQ05BLFFBQUEsT0FBQSxTQUNBLFdBQUEsWUFBQSxTQUFBLFFBQUEsY0FBQSxTQUFBLEVBQUEsRUFBQSxHQUVBLFFBQUEsSUFBQSx5QkFFQSxJQUFBLElBQUEsTUFBQSxNQUFBLE1BRUEsR0FBQSxTQUVBLEVBQUEsS0FBQSxFQUFBLFNBQUEsR0FDQSxHQUFBLEdBQUEsRUFBQSxpQkFBQSxFQUNBLEdBQUEsS0FBQSxTQUFBLEdBQ0EsUUFBQSxJQUFBLEdBQ0EsRUFBQSxNQUFBLEtBQUEsSUFDQSxTQUFBLEdBQ0EsUUFBQSxJQUFBLFVDZkEsUUFBQSxPQUFBLFNBQUEsUUFBQSxlQUFBLFFBQUEsT0FBQSxLQUFBLFNBQUEsRUFBQSxFQUFBLEdBQ0EsT0FDQSxpQkFBQSxTQUFBLEdBQ0EsUUFBQSxJQUFBLGdCQUFBLEVBQ0EsSUFBQSxHQUFBLEVBQUEsT0FzQkEsT0FyQkEsR0FBQSxJQUFBLG9EQUFBLEdBQ0EsUUFBQSxTQUFBLEdBQ0EsR0FBQSxHQUFBLEVBQUEsRUFDQSxHQUFBLFNBQ0EsR0FBQSxFQUNBLFVBQUEsRUFBQSxVQUNBLGtCQUFBLE9BQUEsRUFBQSxXQUFBLEtBQUEsU0FBQSxVQUNBLFlBQUEsRUFBQSxZQUNBLFlBQUEsRUFBQSxZQUNBLGFBQUEsRUFBQSxhQUNBLGVBQUEsRUFBQSxlQUNBLFVBQUEsRUFBQSxVQUNBLFlBQUEsRUFBQSxZQUNBLGNBQUEsRUFBQSxjQUNBLFVBQUEsRUFBQSxVQUNBLFFBQUEsRUFBQSxZQUdBLE1BQUEsU0FBQSxHQUNBLEVBQUEsT0FBQSxLQUVBLEVBQUEiLCJmaWxlIjoiYXBwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiYW5ndWxhci5tb2R1bGUoJ2FwcCcsIFtcbiAgJ3VpLnJvdXRlcicsXG4gICdidW95cydcbl0pXG4iLCJhbmd1bGFyLm1vZHVsZSgnYnVveXMnLCBbXSlcbiIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxuLmNvbmZpZyhmdW5jdGlvbigkc3RhdGVQcm92aWRlciwgJHVybFJvdXRlclByb3ZpZGVyKSB7XG4gICR1cmxSb3V0ZXJQcm92aWRlci5vdGhlcndpc2UoJy9idW95cycpO1xuICAkc3RhdGVQcm92aWRlclxuICAgIC5zdGF0ZSgnYnVveXMnLCB7XG4gICAgICAgIHVybDogJy9idW95cycsXG4gICAgICAgIGNvbnRyb2xsZXIgOiAnQnVveUN0cmwnLFxuICAgICAgICB0ZW1wbGF0ZVVybDogJ3RlbXBsYXRlcy9idW95cy9idW95cy5odG1sJ1xuICAgIH0pXG59KVxuIiwiJ3VzZSBzdHJpY3QnXG5hbmd1bGFyLm1vZHVsZSgnYnVveXMnKVxuLmNvbnRyb2xsZXIoJ0J1b3lDdHJsJywgZnVuY3Rpb24gKCRzY29wZSwgJGh0dHAsIEJ1b3lTZXJ2aWNlKSB7XG4gIFxuICBjb25zb2xlLmxvZygnYnVveSBjb250b2xsZXIgc3RhcnRlZCcpO1xuICBcbiAgdmFyIGJ1b3lzID0gWzQ2MDEyLCA0NjIzNywgNDYwMjZdO1xuICBcbiAgJHNjb3BlLmJ1b3lzID0gW107XG4gIFxuICBfLmVhY2goIGJ1b3lzLCBmdW5jdGlvbiggZWxlbWVudCwgaW5kZXggKXtcbiAgICB2YXIgYnVveSA9IEJ1b3lTZXJ2aWNlLmdldExhdGVzdFJlYWRpbmcoZWxlbWVudCk7XG4gICAgYnVveS50aGVuKGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgIGNvbnNvbGUubG9nKGRhdGEpO1xuICAgICAgJHNjb3BlLmJ1b3lzLnB1c2goZGF0YSk7XG4gICAgfSwgZnVuY3Rpb24oZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcbiAgICB9KTtcbiAgfSlcbiAgXG59KVxuIiwiJ3VzZSBzdHJpY3QnXG5hbmd1bGFyLm1vZHVsZSgnYnVveXMnKS5mYWN0b3J5KCdCdW95U2VydmljZScsIGZ1bmN0aW9uKCRodHRwLCAkbG9nLCAkcSkge1xuICByZXR1cm4ge1xuICAgIGdldExhdGVzdFJlYWRpbmcgOiBmdW5jdGlvbihpZCkge1xuICAgICAgY29uc29sZS5sb2coJ2ZldGNoaW5nIGJ1b3knLCBpZCk7XG4gICAgICB2YXIgZGVmZXJyZWQgPSAkcS5kZWZlcigpO1xuICAgICAgJGh0dHAuZ2V0KCdodHRwOi8vY3J5cHRpYy1wZWFrLTkxMDAuaGVyb2t1YXBwLmNvbS9hcGkvYnVveXMvJyArIGlkKVxuICAgICAgICAuc3VjY2VzcyhmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgdmFyIGxhdGVzdFJlYWRpbmcgPSBkYXRhWzBdO1xuICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUoe1xuICAgICAgICAgICAgaWQgICAgICAgICAgICAgICAgOiBpZCxcbiAgICAgICAgICAgIHRpbWVzdGFtcCAgICAgICAgIDogbGF0ZXN0UmVhZGluZy50aW1lc3RhbXAsXG4gICAgICAgICAgICByZWxhdGl2ZVRpbWVzdGFtcCA6IG1vbWVudChsYXRlc3RSZWFkaW5nLnRpbWVzdGFtcCkuem9uZSgnLTA4MDAnKS5mcm9tTm93KCksXG4gICAgICAgICAgICBzd2VsbEhlaWdodCAgICAgICA6IGxhdGVzdFJlYWRpbmcuc3dlbGxIZWlnaHQsXG4gICAgICAgICAgICBzd2VsbFBlcmlvZCAgICAgICA6IGxhdGVzdFJlYWRpbmcuc3dlbGxQZXJpb2QsXG4gICAgICAgICAgICBzd2VsbERlZ3JlZXMgICAgICA6IGxhdGVzdFJlYWRpbmcuc3dlbGxEZWdyZWVzLFxuICAgICAgICAgICAgc3dlbGxEaXJlY3Rpb24gICAgOiBsYXRlc3RSZWFkaW5nLnN3ZWxsRGlyZWN0aW9uLFxuICAgICAgICAgICAgd2luZFNwZWVkICAgICAgICAgOiBsYXRlc3RSZWFkaW5nLndpbmRTcGVlZCxcbiAgICAgICAgICAgIHdpbmREZWdyZWVzICAgICAgIDogbGF0ZXN0UmVhZGluZy53aW5kRGVncmVlcyxcbiAgICAgICAgICAgIHdpbmREaXJlY3Rpb24gICAgIDogbGF0ZXN0UmVhZGluZy53aW5kRGlyZWN0aW9uLFxuICAgICAgICAgICAgd2F0ZXJUZW1wICAgICAgICAgOiBsYXRlc3RSZWFkaW5nLndhdGVyVGVtcCxcbiAgICAgICAgICAgIGFpclRlbXAgICAgICAgICAgIDogbGF0ZXN0UmVhZGluZy5haXJUZW1wXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pXG4gICAgICAgIC5lcnJvcihmdW5jdGlvbihtc2csIGNvZGUpIHtcbiAgICAgICAgICBkZWZlcnJlZC5yZWplY3QobXNnKTtcbiAgICAgICAgfSlcbiAgICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2U7XG4gICAgfVxuICB9XG59KVxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9