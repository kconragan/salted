angular.module("app",["ui.router","ngTouch","buoys","tabs"]),angular.module("buoys",[]),angular.module("tabs",[]),angular.module("app").config(["$stateProvider","$urlRouterProvider",function(e,o){o.otherwise("/buoys"),e.state("buoys",{url:"/buoys",controller:"BuoyCtrl",templateUrl:"templates/buoys/buoys.html"})}]),angular.module("buoys").controller("BuoyCtrl",["$scope","$http","BuoyService",function(e,o,t){console.log("buoy contoller started");var n=[46012,46237,46026];e.loading=!0,e.buoys=[],_.each(n,function(o){var n=t.getLatestReading(o);n.then(function(o){console.log(o),e.buoys.push(o),e.loading=!1},function(e){console.log(e)})})}]),angular.module("buoys").factory("BuoyService",["$http","$log","$q",function(e,o,t){return{getLatestReading:function(o){console.log("fetching buoy",o);var n=t.defer();return e.get("http://cryptic-peak-9100.herokuapp.com/api/buoys/"+o).success(function(e){var t=e[0];n.resolve({id:o,timestamp:t.timestamp,relativeTimestamp:moment(t.timestamp).zone("-0800").fromNow(),swellHeight:t.swellHeight,swellPeriod:t.swellPeriod,swellDegrees:t.swellDegrees,swellDirection:t.swellDirection,windSpeed:t.windSpeed,windDegrees:t.windDegrees,windDirection:t.windDirection,waterTemp:t.waterTemp,airTemp:t.airTemp})}).error(function(e){n.reject(e)}),n.promise}}}]),angular.module("tabs").controller("TabCtrl",["$scope","$swipe","$location",function(e,o,t){console.log("tabs contoller started"),e.data={selectedIndex:0},e.onSwipeRight=function(){console.log("swiping right"),e.selectedIndex=e.selectedIndex<2?e.selectedIndex+1:0},e.onSwipeLeft=function(){console.log("swiping left"),e.selectedIndex=e.selectedIndex>0?e.selectedIndex-1:2},e.$watch("selectedIndex",function(e){switch(e){case 0:t.url("/buoys");break;case 1:t.url("/wind");break;case 2:t.url("/tide")}})}]),angular.module("tabs").directive("scroll",[function(){"use strict";return console.log("preventing overscroll"),function(e,o){var t=(window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight,document.getElementById("scroll").offsetHeight);console.log(t),o.css("height",t+"px")}}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpzL21vZHVsZS5qcyIsImpzL2J1b3lzL21vZHVsZS5qcyIsImpzL3RhYnMvbW9kdWxlLmpzIiwianMvcm91dGVzLmpzIiwianMvYnVveXMvYnVveUNvbnRyb2xsZXIuanMiLCJqcy9idW95cy9idW95U2VydmljZS5qcyIsImpzL3RhYnMvdGFiQ29udHJvbGxlci5qcyIsImpzL3RhYnMvdGFiRGlyZWN0aXZlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFFBQUEsT0FBQSxPQUNBLFlBQ0EsVUFDQSxRQUNBLFNDSkEsUUFBQSxPQUFBLFlDQUEsUUFBQSxPQUFBLFdDQUEsUUFBQSxPQUFBLE9BQ0EsUUFBQSxpQkFBQSxxQkFBQSxTQUFBLEVBQUEsR0FDQSxFQUFBLFVBQUEsVUFDQSxFQUNBLE1BQUEsU0FDQSxJQUFBLFNBQ0EsV0FBQSxXQUNBLFlBQUEsa0NDTkEsUUFBQSxPQUFBLFNBQ0EsV0FBQSxZQUFBLFNBQUEsUUFBQSxjQUFBLFNBQUEsRUFBQSxFQUFBLEdBRUEsUUFBQSxJQUFBLHlCQUVBLElBQUEsSUFBQSxNQUFBLE1BQUEsTUFFQSxHQUFBLFNBQUEsRUFDQSxFQUFBLFNBRUEsRUFBQSxLQUFBLEVBQUEsU0FBQSxHQUNBLEdBQUEsR0FBQSxFQUFBLGlCQUFBLEVBQ0EsR0FBQSxLQUFBLFNBQUEsR0FDQSxRQUFBLElBQUEsR0FDQSxFQUFBLE1BQUEsS0FBQSxHQUNBLEVBQUEsU0FBQSxHQUdBLFNBQUEsR0FDQSxRQUFBLElBQUEsVUNuQkEsUUFBQSxPQUFBLFNBQUEsUUFBQSxlQUFBLFFBQUEsT0FBQSxLQUFBLFNBQUEsRUFBQSxFQUFBLEdBQ0EsT0FDQSxpQkFBQSxTQUFBLEdBQ0EsUUFBQSxJQUFBLGdCQUFBLEVBQ0EsSUFBQSxHQUFBLEVBQUEsT0FzQkEsT0FyQkEsR0FBQSxJQUFBLG9EQUFBLEdBQ0EsUUFBQSxTQUFBLEdBQ0EsR0FBQSxHQUFBLEVBQUEsRUFDQSxHQUFBLFNBQ0EsR0FBQSxFQUNBLFVBQUEsRUFBQSxVQUNBLGtCQUFBLE9BQUEsRUFBQSxXQUFBLEtBQUEsU0FBQSxVQUNBLFlBQUEsRUFBQSxZQUNBLFlBQUEsRUFBQSxZQUNBLGFBQUEsRUFBQSxhQUNBLGVBQUEsRUFBQSxlQUNBLFVBQUEsRUFBQSxVQUNBLFlBQUEsRUFBQSxZQUNBLGNBQUEsRUFBQSxjQUNBLFVBQUEsRUFBQSxVQUNBLFFBQUEsRUFBQSxZQUdBLE1BQUEsU0FBQSxHQUNBLEVBQUEsT0FBQSxLQUVBLEVBQUEsYUMxQkEsUUFBQSxPQUFBLFFBQ0EsV0FBQSxXQUFBLFNBQUEsU0FBQSxZQUFBLFNBQUEsRUFBQSxFQUFBLEdBRUEsUUFBQSxJQUFBLDBCQUVBLEVBQUEsTUFDQSxjQUFBLEdBR0EsRUFBQSxhQUFBLFdBRUEsUUFBQSxJQUFBLGlCQUdBLEVBQUEsY0FEQSxFQUFBLGNBQUEsRUFDQSxFQUFBLGNBQUEsRUFLQSxHQUlBLEVBQUEsWUFBQSxXQUVBLFFBQUEsSUFBQSxnQkFHQSxFQUFBLGNBREEsRUFBQSxjQUFBLEVBQ0EsRUFBQSxjQUFBLEVBS0EsR0FJQSxFQUFBLE9BQUEsZ0JBQUEsU0FBQSxHQUNBLE9BQUEsR0FDQSxJQUFBLEdBQ0EsRUFBQSxJQUFBLFNBQ0EsTUFDQSxLQUFBLEdBQ0EsRUFBQSxJQUFBLFFBQ0EsTUFDQSxLQUFBLEdBQ0EsRUFBQSxJQUFBLGVDL0NBLFFBQUEsT0FBQSxRQUNBLFVBQUEsVUFBQSxXQUNBLFlBRUEsT0FEQSxTQUFBLElBQUEseUJBQ0EsU0FBQSxFQUFBLEdBQ0EsR0FDQSxJQURBLE9BQUEsYUFBQSxTQUFBLGdCQUFBLGNBQUEsU0FBQSxLQUFBLGFBQ0EsU0FBQSxlQUFBLFVBQUEsYUFDQSxTQUFBLElBQUEsR0FDQSxFQUFBLElBQUEsU0FBQSxFQUFBIiwiZmlsZSI6ImFwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbImFuZ3VsYXIubW9kdWxlKCdhcHAnLCBbXG4gICd1aS5yb3V0ZXInLFxuICAnbmdUb3VjaCcsXG4gICdidW95cycsXG4gICd0YWJzJ1xuXSk7XG4iLCJhbmd1bGFyLm1vZHVsZSgnYnVveXMnLCBbXSlcbiIsImFuZ3VsYXIubW9kdWxlKCd0YWJzJywgW10pXG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcbi5jb25maWcoZnVuY3Rpb24oJHN0YXRlUHJvdmlkZXIsICR1cmxSb3V0ZXJQcm92aWRlcikge1xuICAkdXJsUm91dGVyUHJvdmlkZXIub3RoZXJ3aXNlKCcvYnVveXMnKTtcbiAgJHN0YXRlUHJvdmlkZXJcbiAgICAuc3RhdGUoJ2J1b3lzJywge1xuICAgICAgdXJsOiAnL2J1b3lzJyxcbiAgICAgIGNvbnRyb2xsZXI6ICdCdW95Q3RybCcsXG4gICAgICB0ZW1wbGF0ZVVybDogJ3RlbXBsYXRlcy9idW95cy9idW95cy5odG1sJ1xuICAgIH0pXG59KVxuIiwiJ3VzZSBzdHJpY3QnXG5hbmd1bGFyLm1vZHVsZSgnYnVveXMnKVxuLmNvbnRyb2xsZXIoJ0J1b3lDdHJsJywgZnVuY3Rpb24oJHNjb3BlLCAkaHR0cCwgQnVveVNlcnZpY2UpIHtcblxuICBjb25zb2xlLmxvZygnYnVveSBjb250b2xsZXIgc3RhcnRlZCcpO1xuXG4gIHZhciBidW95cyA9IFs0NjAxMiwgNDYyMzcsIDQ2MDI2XTtcblxuICAkc2NvcGUubG9hZGluZyA9IHRydWU7XG4gICRzY29wZS5idW95cyA9IFtdO1xuXG4gIF8uZWFjaChidW95cywgZnVuY3Rpb24oZWxlbWVudCwgaW5kZXgpIHtcbiAgICB2YXIgYnVveSA9IEJ1b3lTZXJ2aWNlLmdldExhdGVzdFJlYWRpbmcoZWxlbWVudCk7XG4gICAgYnVveS50aGVuKGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgIGNvbnNvbGUubG9nKGRhdGEpO1xuICAgICAgJHNjb3BlLmJ1b3lzLnB1c2goZGF0YSk7XG4gICAgICAkc2NvcGUubG9hZGluZyA9IGZhbHNlO1xuICAgIH0sXG5cbiAgICBmdW5jdGlvbihlcnJvcikge1xuICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgIH0pO1xuICB9KVxuXG59KVxuIiwiJ3VzZSBzdHJpY3QnXG5hbmd1bGFyLm1vZHVsZSgnYnVveXMnKS5mYWN0b3J5KCdCdW95U2VydmljZScsIGZ1bmN0aW9uKCRodHRwLCAkbG9nLCAkcSkge1xuICByZXR1cm4ge1xuICAgIGdldExhdGVzdFJlYWRpbmcgOiBmdW5jdGlvbihpZCkge1xuICAgICAgY29uc29sZS5sb2coJ2ZldGNoaW5nIGJ1b3knLCBpZCk7XG4gICAgICB2YXIgZGVmZXJyZWQgPSAkcS5kZWZlcigpO1xuICAgICAgJGh0dHAuZ2V0KCdodHRwOi8vY3J5cHRpYy1wZWFrLTkxMDAuaGVyb2t1YXBwLmNvbS9hcGkvYnVveXMvJyArIGlkKVxuICAgICAgICAuc3VjY2VzcyhmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgdmFyIGxhdGVzdFJlYWRpbmcgPSBkYXRhWzBdO1xuICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUoe1xuICAgICAgICAgICAgaWQgICAgICAgICAgICAgICAgOiBpZCxcbiAgICAgICAgICAgIHRpbWVzdGFtcCAgICAgICAgIDogbGF0ZXN0UmVhZGluZy50aW1lc3RhbXAsXG4gICAgICAgICAgICByZWxhdGl2ZVRpbWVzdGFtcCA6IG1vbWVudChsYXRlc3RSZWFkaW5nLnRpbWVzdGFtcCkuem9uZSgnLTA4MDAnKS5mcm9tTm93KCksXG4gICAgICAgICAgICBzd2VsbEhlaWdodCAgICAgICA6IGxhdGVzdFJlYWRpbmcuc3dlbGxIZWlnaHQsXG4gICAgICAgICAgICBzd2VsbFBlcmlvZCAgICAgICA6IGxhdGVzdFJlYWRpbmcuc3dlbGxQZXJpb2QsXG4gICAgICAgICAgICBzd2VsbERlZ3JlZXMgICAgICA6IGxhdGVzdFJlYWRpbmcuc3dlbGxEZWdyZWVzLFxuICAgICAgICAgICAgc3dlbGxEaXJlY3Rpb24gICAgOiBsYXRlc3RSZWFkaW5nLnN3ZWxsRGlyZWN0aW9uLFxuICAgICAgICAgICAgd2luZFNwZWVkICAgICAgICAgOiBsYXRlc3RSZWFkaW5nLndpbmRTcGVlZCxcbiAgICAgICAgICAgIHdpbmREZWdyZWVzICAgICAgIDogbGF0ZXN0UmVhZGluZy53aW5kRGVncmVlcyxcbiAgICAgICAgICAgIHdpbmREaXJlY3Rpb24gICAgIDogbGF0ZXN0UmVhZGluZy53aW5kRGlyZWN0aW9uLFxuICAgICAgICAgICAgd2F0ZXJUZW1wICAgICAgICAgOiBsYXRlc3RSZWFkaW5nLndhdGVyVGVtcCxcbiAgICAgICAgICAgIGFpclRlbXAgICAgICAgICAgIDogbGF0ZXN0UmVhZGluZy5haXJUZW1wXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pXG4gICAgICAgIC5lcnJvcihmdW5jdGlvbihtc2csIGNvZGUpIHtcbiAgICAgICAgICBkZWZlcnJlZC5yZWplY3QobXNnKTtcbiAgICAgICAgfSlcbiAgICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2U7XG4gICAgfVxuICB9XG59KVxuIiwiJ3VzZSBzdHJpY3QnXG5hbmd1bGFyLm1vZHVsZSgndGFicycpXG4uY29udHJvbGxlcignVGFiQ3RybCcsIGZ1bmN0aW9uKCRzY29wZSwgJHN3aXBlLCAkbG9jYXRpb24pIHtcblxuICBjb25zb2xlLmxvZygndGFicyBjb250b2xsZXIgc3RhcnRlZCcpO1xuXG4gICRzY29wZS5kYXRhID0ge1xuICAgIHNlbGVjdGVkSW5kZXg6IDBcbiAgfTtcblxuICAkc2NvcGUub25Td2lwZVJpZ2h0ID0gZnVuY3Rpb24oKSB7XG5cbiAgICBjb25zb2xlLmxvZygnc3dpcGluZyByaWdodCcpO1xuXG4gICAgaWYgKCRzY29wZS5zZWxlY3RlZEluZGV4IDwgMikge1xuICAgICAgJHNjb3BlLnNlbGVjdGVkSW5kZXggID0gJHNjb3BlLnNlbGVjdGVkSW5kZXggKyAxO1xuICAgIH1cblxuICAgIC8vIGlmIHlvdSB3YW50IHRvIG1ha2UgYWxsIHRoZSB0b3VyXG4gICAgZWxzZSB7XG4gICAgICAkc2NvcGUuc2VsZWN0ZWRJbmRleCAgPSAwO1xuICAgIH1cbiAgfVxuXG4gICRzY29wZS5vblN3aXBlTGVmdCA9IGZ1bmN0aW9uKCkge1xuXG4gICAgY29uc29sZS5sb2coJ3N3aXBpbmcgbGVmdCcpO1xuXG4gICAgaWYgKCRzY29wZS5zZWxlY3RlZEluZGV4ID4gMCkge1xuICAgICAgJHNjb3BlLnNlbGVjdGVkSW5kZXggID0gJHNjb3BlLnNlbGVjdGVkSW5kZXggLSAxO1xuICAgIH1cblxuICAgIC8vIGlmIHlvdSB3YW50IHRvIG1ha2UgYWxsIHRoZSB0b3VyXG4gICAgZWxzZSB7XG4gICAgICAkc2NvcGUuc2VsZWN0ZWRJbmRleCAgPSAyO1xuICAgIH1cbiAgfVxuXG4gICRzY29wZS4kd2F0Y2goJ3NlbGVjdGVkSW5kZXgnLCBmdW5jdGlvbihjdXJyZW50LCBvbGQpIHtcbiAgICBzd2l0Y2ggKGN1cnJlbnQpIHtcbiAgICAgIGNhc2UgMDpcbiAgICAgICAgJGxvY2F0aW9uLnVybCgnL2J1b3lzJyk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAxOlxuICAgICAgICAkbG9jYXRpb24udXJsKCcvd2luZCcpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgMjpcbiAgICAgICAgJGxvY2F0aW9uLnVybCgnL3RpZGUnKTtcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICB9KTtcblxufSk7XG4iLCJhbmd1bGFyLm1vZHVsZSgndGFicycpXG4gIC5kaXJlY3RpdmUoJ3Njcm9sbCcsIFtmdW5jdGlvbigpIHtcbiAgICAndXNlIHN0cmljdCc7XG4gICAgY29uc29sZS5sb2coJ3ByZXZlbnRpbmcgb3ZlcnNjcm9sbCcpO1xuICAgIHJldHVybiBmdW5jdGlvbihzY29wZSwgZWxlbWVudCwgYXR0cnMpIHtcbiAgICAgIHZhciB3aW5kb3dIZWlnaHQgPSB3aW5kb3cuaW5uZXJIZWlnaHQgfHwgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudEhlaWdodCB8fCBkb2N1bWVudC5ib2R5LmNsaWVudEhlaWdodDtcbiAgICAgIHZhciBoZWFkZXJIZWlnaHQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2Nyb2xsJykub2Zmc2V0SGVpZ2h0O1xuICAgICAgY29uc29sZS5sb2coaGVhZGVySGVpZ2h0KTtcbiAgICAgIGVsZW1lbnQuY3NzKCdoZWlnaHQnLCBoZWFkZXJIZWlnaHQgKyAncHgnKTtcbiAgICB9XG4gIH1dKTtcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==