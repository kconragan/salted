angular.module("app",["ui.router","ngTouch","buoys","tabs"]),angular.module("buoys",[]),angular.module("tabs",[]),angular.module("app").config(["$stateProvider","$urlRouterProvider",function(e,o){o.otherwise("/buoys"),e.state("buoys",{url:"/buoys",controller:"BuoyCtrl",templateUrl:"templates/buoys/buoys.html"})}]),angular.module("buoys").controller("BuoyCtrl",["$scope","$http","BuoyService",function(e,o,t){console.log("buoy contoller started");var l=[46012,46237,46026];e.buoys=[],_.each(l,function(o){var l=t.getLatestReading(o);l.then(function(o){console.log(o),e.buoys.push(o)},function(e){console.log(e)})})}]),angular.module("buoys").factory("BuoyService",["$http","$log","$q",function(e,o,t){return{getLatestReading:function(o){console.log("fetching buoy",o);var l=t.defer();return e.get("http://cryptic-peak-9100.herokuapp.com/api/buoys/"+o).success(function(e){var t=e[0];l.resolve({id:o,timestamp:t.timestamp,relativeTimestamp:moment(t.timestamp).zone("-0800").fromNow(),swellHeight:t.swellHeight,swellPeriod:t.swellPeriod,swellDegrees:t.swellDegrees,swellDirection:t.swellDirection,windSpeed:t.windSpeed,windDegrees:t.windDegrees,windDirection:t.windDirection,waterTemp:t.waterTemp,airTemp:t.airTemp})}).error(function(e){l.reject(e)}),l.promise}}}]),angular.module("tabs").controller("TabCtrl",["$scope","$swipe","$location",function(e,o,t){console.log("tabs contoller started"),e.data={selectedIndex:0},e.onSwipeRight=function(){console.log("swiping right"),e.selectedIndex=e.selectedIndex<2?e.selectedIndex+1:0},e.onSwipeLeft=function(){console.log("swiping left"),e.selectedIndex=e.selectedIndex>0?e.selectedIndex-1:2},e.$watch("selectedIndex",function(e){switch(e){case 0:t.url("/buoys");break;case 1:t.url("/wind");break;case 2:t.url("/tide")}})}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpzL21vZHVsZS5qcyIsImpzL2J1b3lzL21vZHVsZS5qcyIsImpzL3RhYnMvbW9kdWxlLmpzIiwianMvcm91dGVzLmpzIiwianMvYnVveXMvYnVveUNvbnRyb2xsZXIuanMiLCJqcy9idW95cy9idW95U2VydmljZS5qcyIsImpzL3RhYnMvdGFiQ29udHJvbGxlci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxRQUFBLE9BQUEsT0FDQSxZQUNBLFVBQ0EsUUFDQSxTQ0pBLFFBQUEsT0FBQSxZQ0FBLFFBQUEsT0FBQSxXQ0FBLFFBQUEsT0FBQSxPQUNBLFFBQUEsaUJBQUEscUJBQUEsU0FBQSxFQUFBLEdBQ0EsRUFBQSxVQUFBLFVBQ0EsRUFDQSxNQUFBLFNBQ0EsSUFBQSxTQUNBLFdBQUEsV0FDQSxZQUFBLGtDQ05BLFFBQUEsT0FBQSxTQUNBLFdBQUEsWUFBQSxTQUFBLFFBQUEsY0FBQSxTQUFBLEVBQUEsRUFBQSxHQUVBLFFBQUEsSUFBQSx5QkFFQSxJQUFBLElBQUEsTUFBQSxNQUFBLE1BRUEsR0FBQSxTQUVBLEVBQUEsS0FBQSxFQUFBLFNBQUEsR0FDQSxHQUFBLEdBQUEsRUFBQSxpQkFBQSxFQUNBLEdBQUEsS0FBQSxTQUFBLEdBQ0EsUUFBQSxJQUFBLEdBQ0EsRUFBQSxNQUFBLEtBQUEsSUFHQSxTQUFBLEdBQ0EsUUFBQSxJQUFBLFVDakJBLFFBQUEsT0FBQSxTQUFBLFFBQUEsZUFBQSxRQUFBLE9BQUEsS0FBQSxTQUFBLEVBQUEsRUFBQSxHQUNBLE9BQ0EsaUJBQUEsU0FBQSxHQUNBLFFBQUEsSUFBQSxnQkFBQSxFQUNBLElBQUEsR0FBQSxFQUFBLE9Bc0JBLE9BckJBLEdBQUEsSUFBQSxvREFBQSxHQUNBLFFBQUEsU0FBQSxHQUNBLEdBQUEsR0FBQSxFQUFBLEVBQ0EsR0FBQSxTQUNBLEdBQUEsRUFDQSxVQUFBLEVBQUEsVUFDQSxrQkFBQSxPQUFBLEVBQUEsV0FBQSxLQUFBLFNBQUEsVUFDQSxZQUFBLEVBQUEsWUFDQSxZQUFBLEVBQUEsWUFDQSxhQUFBLEVBQUEsYUFDQSxlQUFBLEVBQUEsZUFDQSxVQUFBLEVBQUEsVUFDQSxZQUFBLEVBQUEsWUFDQSxjQUFBLEVBQUEsY0FDQSxVQUFBLEVBQUEsVUFDQSxRQUFBLEVBQUEsWUFHQSxNQUFBLFNBQUEsR0FDQSxFQUFBLE9BQUEsS0FFQSxFQUFBLGFDMUJBLFFBQUEsT0FBQSxRQUNBLFdBQUEsV0FBQSxTQUFBLFNBQUEsWUFBQSxTQUFBLEVBQUEsRUFBQSxHQUVBLFFBQUEsSUFBQSwwQkFFQSxFQUFBLE1BQ0EsY0FBQSxHQUdBLEVBQUEsYUFBQSxXQUVBLFFBQUEsSUFBQSxpQkFHQSxFQUFBLGNBREEsRUFBQSxjQUFBLEVBQ0EsRUFBQSxjQUFBLEVBS0EsR0FJQSxFQUFBLFlBQUEsV0FFQSxRQUFBLElBQUEsZ0JBR0EsRUFBQSxjQURBLEVBQUEsY0FBQSxFQUNBLEVBQUEsY0FBQSxFQUtBLEdBSUEsRUFBQSxPQUFBLGdCQUFBLFNBQUEsR0FDQSxPQUFBLEdBQ0EsSUFBQSxHQUNBLEVBQUEsSUFBQSxTQUNBLE1BQ0EsS0FBQSxHQUNBLEVBQUEsSUFBQSxRQUNBLE1BQ0EsS0FBQSxHQUNBLEVBQUEsSUFBQSIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJhbmd1bGFyLm1vZHVsZSgnYXBwJywgW1xuICAndWkucm91dGVyJyxcbiAgJ25nVG91Y2gnLFxuICAnYnVveXMnLFxuICAndGFicydcbl0pO1xuIiwiYW5ndWxhci5tb2R1bGUoJ2J1b3lzJywgW10pXG4iLCJhbmd1bGFyLm1vZHVsZSgndGFicycsIFtdKVxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uY29uZmlnKGZ1bmN0aW9uKCRzdGF0ZVByb3ZpZGVyLCAkdXJsUm91dGVyUHJvdmlkZXIpIHtcbiAgJHVybFJvdXRlclByb3ZpZGVyLm90aGVyd2lzZSgnL2J1b3lzJyk7XG4gICRzdGF0ZVByb3ZpZGVyXG4gICAgLnN0YXRlKCdidW95cycsIHtcbiAgICAgIHVybDogJy9idW95cycsXG4gICAgICBjb250cm9sbGVyOiAnQnVveUN0cmwnLFxuICAgICAgdGVtcGxhdGVVcmw6ICd0ZW1wbGF0ZXMvYnVveXMvYnVveXMuaHRtbCdcbiAgICB9KVxufSlcbiIsIid1c2Ugc3RyaWN0J1xuYW5ndWxhci5tb2R1bGUoJ2J1b3lzJylcbi5jb250cm9sbGVyKCdCdW95Q3RybCcsIGZ1bmN0aW9uKCRzY29wZSwgJGh0dHAsIEJ1b3lTZXJ2aWNlKSB7XG5cbiAgY29uc29sZS5sb2coJ2J1b3kgY29udG9sbGVyIHN0YXJ0ZWQnKTtcblxuICB2YXIgYnVveXMgPSBbNDYwMTIsIDQ2MjM3LCA0NjAyNl07XG5cbiAgJHNjb3BlLmJ1b3lzID0gW107XG5cbiAgXy5lYWNoKGJ1b3lzLCBmdW5jdGlvbihlbGVtZW50LCBpbmRleCkge1xuICAgIHZhciBidW95ID0gQnVveVNlcnZpY2UuZ2V0TGF0ZXN0UmVhZGluZyhlbGVtZW50KTtcbiAgICBidW95LnRoZW4oZnVuY3Rpb24oZGF0YSkge1xuICAgICAgY29uc29sZS5sb2coZGF0YSk7XG4gICAgICAkc2NvcGUuYnVveXMucHVzaChkYXRhKTtcbiAgICB9LFxuXG4gICAgZnVuY3Rpb24oZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcbiAgICB9KTtcbiAgfSlcblxufSlcbiIsIid1c2Ugc3RyaWN0J1xuYW5ndWxhci5tb2R1bGUoJ2J1b3lzJykuZmFjdG9yeSgnQnVveVNlcnZpY2UnLCBmdW5jdGlvbigkaHR0cCwgJGxvZywgJHEpIHtcbiAgcmV0dXJuIHtcbiAgICBnZXRMYXRlc3RSZWFkaW5nIDogZnVuY3Rpb24oaWQpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdmZXRjaGluZyBidW95JywgaWQpO1xuICAgICAgdmFyIGRlZmVycmVkID0gJHEuZGVmZXIoKTtcbiAgICAgICRodHRwLmdldCgnaHR0cDovL2NyeXB0aWMtcGVhay05MTAwLmhlcm9rdWFwcC5jb20vYXBpL2J1b3lzLycgKyBpZClcbiAgICAgICAgLnN1Y2Nlc3MoZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICAgIHZhciBsYXRlc3RSZWFkaW5nID0gZGF0YVswXTtcbiAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKHtcbiAgICAgICAgICAgIGlkICAgICAgICAgICAgICAgIDogaWQsXG4gICAgICAgICAgICB0aW1lc3RhbXAgICAgICAgICA6IGxhdGVzdFJlYWRpbmcudGltZXN0YW1wLFxuICAgICAgICAgICAgcmVsYXRpdmVUaW1lc3RhbXAgOiBtb21lbnQobGF0ZXN0UmVhZGluZy50aW1lc3RhbXApLnpvbmUoJy0wODAwJykuZnJvbU5vdygpLFxuICAgICAgICAgICAgc3dlbGxIZWlnaHQgICAgICAgOiBsYXRlc3RSZWFkaW5nLnN3ZWxsSGVpZ2h0LFxuICAgICAgICAgICAgc3dlbGxQZXJpb2QgICAgICAgOiBsYXRlc3RSZWFkaW5nLnN3ZWxsUGVyaW9kLFxuICAgICAgICAgICAgc3dlbGxEZWdyZWVzICAgICAgOiBsYXRlc3RSZWFkaW5nLnN3ZWxsRGVncmVlcyxcbiAgICAgICAgICAgIHN3ZWxsRGlyZWN0aW9uICAgIDogbGF0ZXN0UmVhZGluZy5zd2VsbERpcmVjdGlvbixcbiAgICAgICAgICAgIHdpbmRTcGVlZCAgICAgICAgIDogbGF0ZXN0UmVhZGluZy53aW5kU3BlZWQsXG4gICAgICAgICAgICB3aW5kRGVncmVlcyAgICAgICA6IGxhdGVzdFJlYWRpbmcud2luZERlZ3JlZXMsXG4gICAgICAgICAgICB3aW5kRGlyZWN0aW9uICAgICA6IGxhdGVzdFJlYWRpbmcud2luZERpcmVjdGlvbixcbiAgICAgICAgICAgIHdhdGVyVGVtcCAgICAgICAgIDogbGF0ZXN0UmVhZGluZy53YXRlclRlbXAsXG4gICAgICAgICAgICBhaXJUZW1wICAgICAgICAgICA6IGxhdGVzdFJlYWRpbmcuYWlyVGVtcFxuICAgICAgICAgIH0pO1xuICAgICAgICB9KVxuICAgICAgICAuZXJyb3IoZnVuY3Rpb24obXNnLCBjb2RlKSB7XG4gICAgICAgICAgZGVmZXJyZWQucmVqZWN0KG1zZyk7XG4gICAgICAgIH0pXG4gICAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlO1xuICAgIH1cbiAgfVxufSlcbiIsIid1c2Ugc3RyaWN0J1xuYW5ndWxhci5tb2R1bGUoJ3RhYnMnKVxuLmNvbnRyb2xsZXIoJ1RhYkN0cmwnLCBmdW5jdGlvbigkc2NvcGUsICRzd2lwZSwgJGxvY2F0aW9uKSB7XG5cbiAgY29uc29sZS5sb2coJ3RhYnMgY29udG9sbGVyIHN0YXJ0ZWQnKTtcblxuICAkc2NvcGUuZGF0YSA9IHtcbiAgICBzZWxlY3RlZEluZGV4OiAwXG4gIH07XG5cbiAgJHNjb3BlLm9uU3dpcGVSaWdodCA9IGZ1bmN0aW9uKCkge1xuXG4gICAgY29uc29sZS5sb2coJ3N3aXBpbmcgcmlnaHQnKTtcblxuICAgIGlmICgkc2NvcGUuc2VsZWN0ZWRJbmRleCA8IDIpIHtcbiAgICAgICRzY29wZS5zZWxlY3RlZEluZGV4ICA9ICRzY29wZS5zZWxlY3RlZEluZGV4ICsgMTtcbiAgICB9XG5cbiAgICAvLyBpZiB5b3Ugd2FudCB0byBtYWtlIGFsbCB0aGUgdG91clxuICAgIGVsc2Uge1xuICAgICAgJHNjb3BlLnNlbGVjdGVkSW5kZXggID0gMDtcbiAgICB9XG4gIH1cblxuICAkc2NvcGUub25Td2lwZUxlZnQgPSBmdW5jdGlvbigpIHtcblxuICAgIGNvbnNvbGUubG9nKCdzd2lwaW5nIGxlZnQnKTtcblxuICAgIGlmICgkc2NvcGUuc2VsZWN0ZWRJbmRleCA+IDApIHtcbiAgICAgICRzY29wZS5zZWxlY3RlZEluZGV4ICA9ICRzY29wZS5zZWxlY3RlZEluZGV4IC0gMTtcbiAgICB9XG5cbiAgICAvLyBpZiB5b3Ugd2FudCB0byBtYWtlIGFsbCB0aGUgdG91clxuICAgIGVsc2Uge1xuICAgICAgJHNjb3BlLnNlbGVjdGVkSW5kZXggID0gMjtcbiAgICB9XG4gIH1cblxuICAkc2NvcGUuJHdhdGNoKCdzZWxlY3RlZEluZGV4JywgZnVuY3Rpb24oY3VycmVudCwgb2xkKSB7XG4gICAgc3dpdGNoIChjdXJyZW50KSB7XG4gICAgICBjYXNlIDA6XG4gICAgICAgICRsb2NhdGlvbi51cmwoJy9idW95cycpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgMTpcbiAgICAgICAgJGxvY2F0aW9uLnVybCgnL3dpbmQnKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIDI6XG4gICAgICAgICRsb2NhdGlvbi51cmwoJy90aWRlJyk7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgfSk7XG5cbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9